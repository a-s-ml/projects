{"version":3,"file":"536.js","mappings":"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","sources":["webpack://add-question/./src/app/store/slices/addQuestionApp.slice.ts","webpack://add-question/./src/app/store/index.ts","webpack://add-question/../../libs/api/src/question.api.ts","webpack://add-question/./src/app/components/StepsForm.tsx","webpack://add-question/../../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js","webpack://add-question/../../node_modules/@heroicons/react/24/outline/esm/XMarkIcon.js","webpack://add-question/./src/app/components/TextListValidate.tsx","webpack://add-question/../../node_modules/@heroicons/react/20/solid/esm/XMarkIcon.js","webpack://add-question/./src/app/components/ApplyDraft.tsx","webpack://add-question/./src/app/components/TextList.tsx","webpack://add-question/../../node_modules/@heroicons/react/24/outline/esm/ChevronUpDownIcon.js","webpack://add-question/./src/app/components/CategoryList.tsx","webpack://add-question/./src/app/components/AnswersListValidate.tsx","webpack://add-question/./src/app/components/AnswersList.tsx","webpack://add-question/./src/app/components/NewQuesion.tsx","webpack://add-question/./src/app/hooks/useNewQuestionForm.ts","webpack://add-question/./src/app/app.tsx","webpack://add-question/../../libs/api/src/global.api.ts","webpack://add-question/../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://add-question/../../node_modules/react/jsx-runtime.js"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootStateAddQuestion } from '..';\r\n\r\nexport interface addQuestionAppState {\r\n  text: string;\r\n  category: number;\r\n  answer1: string;\r\n  answer2: string;\r\n  answer3: string;\r\n  answer4: string;\r\n  answerright: number;\r\n}\r\n\r\nconst initialState: addQuestionAppState = {\r\n  text: '',\r\n  category: 0,\r\n  answer1: '',\r\n  answer2: '',\r\n  answer3: '',\r\n  answer4: '',\r\n  answerright: 0,\r\n};\r\n\r\nexport const addQuestionAppSlice = createSlice({\r\n  name: 'addQuestionApp',\r\n  initialState,\r\n  reducers: {\r\n    getQuestionText: (state, action: PayloadAction<string>) => {\r\n      state.text = action.payload;\r\n    },\r\n    getQuestionCategory: (state, action: PayloadAction<number>) => {\r\n      state.category = action.payload;\r\n    },\r\n    getQuestionAnswerOne: (state, action: PayloadAction<string>) => {\r\n      state.answer1 = action.payload;\r\n    },\r\n    getQuestionAnswerTwo: (state, action: PayloadAction<string>) => {\r\n      state.answer2 = action.payload;\r\n    },\r\n    getQuestionAnswerThree: (state, action: PayloadAction<string>) => {\r\n      state.answer3 = action.payload;\r\n    },\r\n    getQuestionAnswerFour: (state, action: PayloadAction<string>) => {\r\n      state.answer4 = action.payload;\r\n    },\r\n    getQuestionAnswerright: (state, action: PayloadAction<number>) => {\r\n      state.answerright = action.payload;\r\n    },\r\n    getQuestionDefault: (state, action: PayloadAction<string>) => {\r\n      state.text = '';\r\n      state.category = 0;\r\n      state.answer1 = '';\r\n      state.answer2 = '';\r\n      state.answer3 = '';\r\n      state.answer4 = '';\r\n      state.answerright = 0;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getQuestionText,\r\n  getQuestionCategory,\r\n  getQuestionAnswerOne,\r\n  getQuestionAnswerTwo,\r\n  getQuestionAnswerThree,\r\n  getQuestionAnswerFour,\r\n  getQuestionAnswerright,\r\n  getQuestionDefault,\r\n} = addQuestionAppSlice.actions;\r\n\r\nexport const selectQuestionText = (state: RootStateAddQuestion) =>\r\n  state.addQuestionApp.text;\r\nexport const selectQuestionCategory = (state: RootStateAddQuestion) =>\r\n  state.addQuestionApp.category;\r\nexport const selectQuestionAnswerOne = (state: RootStateAddQuestion) =>\r\n  state.addQuestionApp.answer1;\r\nexport const selectQuestionAnswerTwo = (state: RootStateAddQuestion) =>\r\n  state.addQuestionApp.answer2;\r\nexport const selectQuestionAnswerThree = (state: RootStateAddQuestion) =>\r\n  state.addQuestionApp.answer3;\r\nexport const selectQuestionAnswerFour = (state: RootStateAddQuestion) =>\r\n  state.addQuestionApp.answer4;\r\nexport const selectQuestionAnswerright = (state: RootStateAddQuestion) =>\r\n  state.addQuestionApp.answerright;\r\nexport const selectQuestion = (state: RootStateAddQuestion) =>\r\n  state.addQuestionApp;\r\n\r\nexport default addQuestionAppSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { globalApi } from '@api/global';\r\nimport addQuestionAppSlice from './slices/addQuestionApp.slice';\r\n\r\nexport const storeAddQuestion = configureStore({\r\n  reducer: {\r\n    [globalApi.reducerPath]: globalApi.reducer,\r\n    addQuestionApp: addQuestionAppSlice,\r\n  },\r\n});\r\n\r\nexport type addQuestionDispatch = typeof storeAddQuestion.dispatch;\r\nexport type RootStateAddQuestion = ReturnType<typeof storeAddQuestion.getState>;\r\n\r\nexport const useAddQuestionDispatch = () => useDispatch<addQuestionDispatch>();\r\nexport const useAddQuestionSelector: TypedUseSelectorHook<RootStateAddQuestion> = useSelector;\r\n","import { IQuestion } from \"@models\";\r\nimport { globalApi } from \"@api/global\";\r\n\r\nexport interface IAddQuestion {\r\n  chat: bigint;\r\n  text: string;\r\n  category: number;\r\n  answer1: string;\r\n  answer2: string;\r\n  answer3: string;\r\n  answer4: string;\r\n  answerright: number;\r\n}\r\n\r\nexport const extendedApiSlice = globalApi.injectEndpoints({\r\n  endpoints: (build) => ({\r\n    getQuestionById: build.query<IQuestion, number>({\r\n      query: (id) => ({\r\n        url: `question/findById/${id}`,\r\n      }),\r\n    }),\r\n\r\n    getQuestionByChat: build.query<IQuestion[], number>({\r\n      query: (chat) => ({\r\n        url: `question/findByChatId/${chat}`,\r\n      }),\r\n    }),\r\n\r\n    updateQuestion: build.mutation<IQuestion, any>({\r\n      query: ({ id, question }) => ({\r\n        url: `/question/${id}`,\r\n        method: \"PATCH\",\r\n        body: { question },\r\n      }),\r\n    }),\r\n\r\n    addQuestion: build.mutation<IQuestion, IAddQuestion>({\r\n      query: (question) => ({ \r\n        url: `/question`,\r\n        method: \"POST\",\r\n        body: question,\r\n      }),\r\n    }),\r\n\r\n    deleteQuestion: build.mutation<number, number>({\r\n      query: (id) => ({\r\n        url: `/chat-category`,\r\n        method: \"DELETE\",\r\n        body: { id },\r\n      }),\r\n    }),\r\n\r\n    countAvailableQuestion: build.query<number, bigint>({\r\n      query: (id) => ({\r\n        url: `auto-post/countAvailableQuestionByChatId/${id}`,\r\n      }),\r\n      providesTags: [\"CountAvailableQuestionGroup\"],\r\n    }),\r\n\r\n    countPublishedQuestion: build.query<number, bigint>({\r\n      query: (id) => ({\r\n        url: `auto-post/countPublishedQuestion/${id}`,\r\n      }),\r\n      providesTags: [\"CountAvailableQuestionGroup\"],\r\n    }),\r\n\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetQuestionByChatQuery,\r\n  useGetQuestionByIdQuery,\r\n  useAddQuestionMutation,\r\n  useDeleteQuestionMutation,\r\n  useUpdateQuestionMutation,\r\n  useCountAvailableQuestionQuery,\r\n  useCountPublishedQuestionQuery\r\n} = extendedApiSlice;\r\n","interface StepsFormProps {\r\n  step: number;\r\n  stepsCount: number;\r\n}\r\n\r\ninterface Steps {\r\n  id: number;\r\n  status: string;\r\n}\r\n\r\nexport default function StepsForm({ step, stepsCount }: StepsFormProps) {\r\n  let steps: Steps[] = [];\r\n\r\n  //хз\r\n  for (let i = 0; i < stepsCount; i++) {\r\n    steps.push({\r\n      id: i,\r\n      status: step > i ? \"complete\" : \"upcoming\",\r\n    });\r\n  }\r\n  //хз\r\n\r\n  return (\r\n    <nav className=\"flex items-center px-8 pt-8 pb-4 bg-[var(--tg-theme-bg-color)] space-x-3 justify-center\" aria-label=\"Progress\">\r\n      <p className=\"text-sm font-medium text-[var(--tg-theme-accent-text-color)]\">\r\n        Шаг {step} из {stepsCount}\r\n      </p>\r\n      <ol role=\"list\" className=\"ml-8 flex items-center space-x-5\">\r\n        {steps.map((step) => (\r\n          <li key={step.id}>\r\n            {step.status === \"complete\" ? (\r\n              <span className=\"block h-2.5 w-2.5 rounded-full bg-[var(--tg-theme-accent-text-color)]\"></span>\r\n            ) : step.status === \"current\" ? (\r\n              <span\r\n                className=\"relative flex items-center justify-center\"\r\n                aria-current=\"step\"\r\n              >\r\n                <span className=\"absolute flex h-5 w-5 p-px\" aria-hidden=\"true\">\r\n                  <span className=\"h-full w-full rounded-full bg-[var(--tg-theme-text-color)]\" />\r\n                </span>\r\n                <span\r\n                  className=\"relative block h-2.5 w-2.5 rounded-full bg-[var(--tg-theme-accent-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </span>\r\n            ) : (\r\n              <span className=\"block h-2.5 w-2.5 rounded-full bg-[var(--tg-theme-text-color)]\"></span>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(CheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XMarkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6 18 18 6M6 6l12 12\"\n  }));\n}\nconst ForwardRef = React.forwardRef(XMarkIcon);\nexport default ForwardRef;","import { CheckIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\r\n\r\ninterface TextListValidateProps {\r\n  text: string;\r\n  onSubmit: () => void;\r\n}\r\n\r\nconst tg = window.Telegram.WebApp;\r\n\r\nexport function TextListValidate({ text, onSubmit }: TextListValidateProps) {\r\n  if (text.length > 10 && text.substring(text.length - 1) === \"?\") {\r\n    tg.MainButton.setText(\"Следующий шаг\");\r\n    tg.MainButton.show();\r\n    tg.onEvent(\"mainButtonClicked\", onSubmit);\r\n  } else {\r\n    tg.MainButton.hide();\r\n  }\r\n\r\n  return (\r\n    <div className=\"py-4\">\r\n      <div className=\"mt-1 flex items-center gap-x-1.5\">\r\n        {text.length >= 10 && (\r\n          <CheckIcon className=\"h-5 w-5 text-green-600\" aria-hidden=\"true\" />\r\n        )}\r\n        {text.length < 10 && (\r\n          <XMarkIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\r\n        )}\r\n        <span\r\n          className={`max-w-[80%] text-xs ${\r\n            text.length >= 10 ? \"text-green-600\" : \"text-red-500\"\r\n          }`}\r\n        >\r\n          Минимальная длина текста вопроса должна составлять не менее 10\r\n          символов\r\n        </span>\r\n      </div>\r\n      <div className=\"mt-1 flex items-center gap-x-1.5\">\r\n        {text.substring(text.length - 1) === \"?\" && (\r\n          <CheckIcon className=\"h-5 w-5 text-green-600\" aria-hidden=\"true\" />\r\n        )}\r\n        {text.substring(text.length - 1) != \"?\" && (\r\n          <XMarkIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\r\n        )}\r\n        <span\r\n          className={`max-w-[80%] text-xs ${\r\n            text.substring(text.length - 1) === \"?\"\r\n              ? \"text-green-600\"\r\n              : \"text-red-500\"\r\n          }`}\r\n        >\r\n          Сформулируйте вопрос так, чтобы он заканчивался вопросительным знаком\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\nfunction XMarkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(XMarkIcon);\nexport default ForwardRef;","import { Dispatch, Fragment, SetStateAction } from \"react\";\r\nimport { Transition } from \"@headlessui/react\";\r\nimport { XMarkIcon } from \"@heroicons/react/20/solid\";\r\n\r\ninterface ApplyDraftProps {\r\n  showNotification: boolean;\r\n  setShowNotification: Dispatch<SetStateAction<boolean>>;\r\n  applyDraft: () => void;\r\n}\r\n\r\nexport default function ApplyDraft({showNotification, setShowNotification, applyDraft}: ApplyDraftProps) {\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        aria-live=\"assertive\"\r\n        className=\"pointer-events-none fixed inset-0 flex items-end px-4 py-12\"\r\n      >\r\n        <div className=\"flex w-full flex-col items-center space-y-4\">\r\n          <Transition\r\n            show={showNotification}\r\n            as={Fragment}\r\n            enter=\"transform ease-out duration-300 transition delay-1000 \"\r\n            enterFrom=\"translate-y-2 opacity-0 delay-1000 \"\r\n            enterTo=\"translate-y-0 opacity-100 delay-1000 \"\r\n            leave=\"transition ease-in duration-100\"\r\n            leaveFrom=\"opacity-100 delay-1000 \"\r\n            leaveTo=\"opacity-0 delay-1000 \"\r\n          >\r\n            <div className=\"pointer-events-auto w-full max-w-sm overflow-hidden rounded-lg bg-white shadow-lg ring-1 ring-black ring-opacity-5\">\r\n              <div className=\"p-4\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex w-0 flex-1 justify-between\">\r\n                    <p className=\"w-0 flex-1 text-sm font-medium text-gray-900\">\r\n                      Применить несохранённый черновик\r\n                    </p>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"ml-3 flex-shrink-0 rounded-md bg-white text-sm font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                    >\r\n                      Ок\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"ml-4 flex flex-shrink-0\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"inline-flex rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                      onClick={applyDraft}\r\n                    >\r\n                      <span className=\"sr-only\">Close</span>\r\n                      <XMarkIcon\r\n                        className=\"h-5 w-5\"\r\n                        aria-hidden=\"true\"\r\n                        onClick={() => setShowNotification(!showNotification)}\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Transition>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { TextListValidate } from \"./TextListValidate\";\r\nimport ApplyDraft from \"./ApplyDraft\";\r\nimport { useAddQuestionDispatch, useAddQuestionSelector } from \"@store/add-question\";\r\nimport { getQuestionText, selectQuestionText } from \"../store/slices/addQuestionApp.slice\";\r\n\r\ninterface TextListProps {\r\n  onSubmit: () => void;\r\n}\r\n\r\nexport function TextList({ onSubmit }: TextListProps) {\r\n  const questionText = useAddQuestionSelector(selectQuestionText);\r\n  const dispatch = useAddQuestionDispatch();\r\n  const [text, setText] = useState(\"\");\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (questionText != \"\") {\r\n      setShowNotification(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleText = (txt: string) => {\r\n    setText(txt);\r\n    dispatch(getQuestionText(txt));\r\n  };\r\n\r\n  const applyDraft = () => {\r\n    handleText(questionText);\r\n    setShowNotification(false)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"py-2\">\r\n        <label\r\n          htmlFor=\"questionText\"\r\n          className=\"block text-sm font-medium leading-6 text-[var(--tg-theme-text-color)]\"\r\n        >\r\n          Текст вопроса:\r\n        </label>\r\n        <div className=\"mt-2\">\r\n          <textarea\r\n            rows={5}\r\n            name=\"questionText\"\r\n            id=\"questionText\"\r\n            className=\"block w-full bg-[var(--tg-theme-bg-color)] rounded-md border-0 px-2 py-2 text-[var(--tg-theme-text-color)] shadow-sm ring-1 ring-inset ring-[var(--tg-theme-text-color)] placeholder:text-[var(--tg-theme-hint-color)]\"\r\n            value={text}\r\n            onChange={(e) => handleText(e.target.value)}\r\n          />\r\n        </div>\r\n        <TextListValidate text={text} onSubmit={onSubmit} />\r\n      </div>\r\n      <ApplyDraft\r\n        showNotification={showNotification}\r\n        setShowNotification={setShowNotification}\r\n        applyDraft={applyDraft}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\nfunction ChevronUpDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 15 12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronUpDownIcon);\nexport default ForwardRef;","import { Listbox, Transition } from '@headlessui/react';\r\nimport { CheckIcon, ChevronUpDownIcon } from '@heroicons/react/24/outline';\r\nimport {\r\n  useAddQuestionDispatch,\r\n  useAddQuestionSelector,\r\n} from '@store/add-question';\r\nimport { Fragment, useState } from 'react';\r\nimport {\r\n  getQuestionCategory,\r\n  selectQuestionCategory,\r\n} from '../store/slices/addQuestionApp.slice';\r\nimport { useGetCategoryQuery } from '@api/category';\r\nimport { ICategory } from 'models';\r\n\r\ninterface CategoryListProps {\r\n  onSubmit: () => void;\r\n}\r\n\r\nconst tg = window.Telegram.WebApp;\r\nlet mona: boolean = false;\r\n\r\nexport function CategoryList({ onSubmit }: CategoryListProps) {\r\n  const questionCategory = useAddQuestionSelector(selectQuestionCategory);\r\n  const { data: allCategory, isSuccess: successCategory } =\r\n    useGetCategoryQuery('');\r\n  const dispatch = useAddQuestionDispatch();\r\n  const [selectedCategory, setCategory] = useState(\r\n    questionCategory != 0\r\n      ? allCategory?.find((id) => id.id === questionCategory)\r\n      : { id: 0, name: ' ' }\r\n  );\r\n\r\n  function classNames(...classes: string[]) {\r\n    return classes.filter(Boolean).join(' ');\r\n  }\r\n\r\n  const handleChange = (cat: ICategory) => {\r\n    setCategory(cat);\r\n    dispatch(getQuestionCategory(cat.id));\r\n    mona = true;\r\n  };\r\n\r\n  if (mona) {\r\n    tg.MainButton.setText('Следующий шаг');\r\n    tg.MainButton.show();\r\n    tg.onEvent('mainButtonClicked', onSubmit);\r\n  }\r\n\r\n  return (\r\n    <div className=\"py-2\">\r\n      <Listbox value={selectedCategory} onChange={handleChange}>\r\n        {({ open }) => (\r\n          <>\r\n            <Listbox.Label className=\"block text-sm font-medium leading-6 text-[var(--tg-theme-text-color)]\">\r\n              Категория вопроса\r\n            </Listbox.Label>\r\n            <div className=\"relative mt-2\">\r\n              <Listbox.Button className=\"relative w-full cursor-default rounded-md bg-[var(--tg-theme-bg-color)] py-1.5 pl-3 pr-10 text-left text-[var(--tg-theme-text-color)] shadow-sm ring-1 ring-inset ring-[var(--tg-theme-text-color)]\">\r\n                <span className=\"inline-flex w-full truncate\">\r\n                  <span className=\"truncate text-[var(--tg-theme-text-color)]\">\r\n                    {selectedCategory?.name}\r\n                  </span>\r\n                </span>\r\n                <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\r\n                  <ChevronUpDownIcon\r\n                    className=\"h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </span>\r\n              </Listbox.Button>\r\n\r\n              <Transition\r\n                show={open}\r\n                as={Fragment}\r\n                leave=\"transition ease-in duration-100\"\r\n                leaveFrom=\"opacity-100\"\r\n                leaveTo=\"opacity-0\"\r\n              >\r\n                <Listbox.Options className=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-[var(--tg-theme-bg-color)] py-1 text-base shadow-lg ring-1 ring-[var(--tg-theme-text-color)] ring-opacity-5\">\r\n                  {allCategory?.map((cat) => (\r\n                    <Listbox.Option\r\n                      key={cat.id}\r\n                      className={({ active }) =>\r\n                        classNames(\r\n                          active\r\n                            ? 'bg-indigo-600 text-white'\r\n                            : 'text-[var(--tg-theme-text-color)]',\r\n                          'relative cursor-default select-none py-2 pl-3 pr-9'\r\n                        )\r\n                      }\r\n                      value={cat}\r\n                    >\r\n                      {({ selected, active }) => (\r\n                        <>\r\n                          <div className=\"flex\">\r\n                            <span\r\n                              className={classNames(\r\n                                selected ? 'font-semibold' : 'font-normal',\r\n                                'truncate text-[var(--tg-theme-text-color)]'\r\n                              )}\r\n                            >\r\n                              {cat.name}\r\n                            </span>\r\n                            {/* <span className={classNames(active ? 'text-indigo-200' : 'text-gray-500', 'ml-2 truncate')}>\r\n                            {cat.id}\r\n                          </span> */}\r\n                          </div>\r\n\r\n                          {selected ? (\r\n                            <span\r\n                              className={classNames(\r\n                                active ? 'text-white' : 'text-indigo-600',\r\n                                'absolute inset-y-0 right-0 flex items-center pr-4'\r\n                              )}\r\n                            >\r\n                              <CheckIcon\r\n                                className=\"h-5 w-5\"\r\n                                aria-hidden=\"true\"\r\n                              />\r\n                            </span>\r\n                          ) : null}\r\n                        </>\r\n                      )}\r\n                    </Listbox.Option>\r\n                  ))}\r\n                </Listbox.Options>\r\n              </Transition>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Listbox>\r\n    </div>\r\n  );\r\n}\r\n","import { CheckIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\r\n\r\ninterface TextFormValidateProps {\r\n  answer1: string;\r\n  answer2: string;\r\n  answer3: string;\r\n  answer4: string;\r\n  answerRight: number;\r\n  onSubmit: () => void;\r\n}\r\n\r\nconst tg = window.Telegram.WebApp;\r\n\r\nexport function AnswersListValidate({\r\n  answer1,\r\n  answer2,\r\n  answer3,\r\n  answer4,\r\n  answerRight,\r\n  onSubmit,\r\n}: TextFormValidateProps) {\r\n  if (\r\n    answer1.length >= 10 &&\r\n    answer1.length <= 25 &&\r\n    answer2.length >= 10 &&\r\n    answer2.length <= 25 &&\r\n    answer3.length >= 10 &&\r\n    answer3.length <= 25 &&\r\n    answer4.length >= 10 &&\r\n    answer4.length <= 25 &&\r\n    answerRight != 0\r\n  ) {\r\n    tg.MainButton.setText(\"Добавить вопрос\");\r\n    tg.MainButton.show();\r\n    tg.onEvent(\"mainButtonClicked\", onSubmit);\r\n  } else {\r\n    tg.MainButton.hide();\r\n  }\r\n\r\n  return (\r\n    <div className=\"py-4\">\r\n      <div className=\"mt-1 flex items-center gap-x-1.5\">\r\n        {Boolean(\r\n          answer1.length > 25 ||\r\n            answer2.length > 25 ||\r\n            answer3.length > 25 ||\r\n            answer4.length > 25\r\n        ) ? (\r\n          <XMarkIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <CheckIcon className=\"h-5 w-5 text-green-600\" aria-hidden=\"true\" />\r\n        )}\r\n\r\n        <span\r\n          className={`max-w-[80%] text-xs ${\r\n            Boolean(\r\n              answer1.length <= 25 &&\r\n                answer2.length <= 25 &&\r\n                answer3.length <= 25 &&\r\n                answer4.length <= 25\r\n            )\r\n              ? \"text-green-600\"\r\n              : \"text-red-500\"\r\n          }`}\r\n        >\r\n          Максимальная длина текста ответов должна составлять не более 25\r\n          символов\r\n        </span>\r\n      </div>\r\n      <div className=\"mt-1 flex items-center gap-x-1.5\">\r\n        {Boolean(\r\n          answer1.length >= 10 &&\r\n            answer2.length >= 10 &&\r\n            answer3.length >= 10 &&\r\n            answer4.length >= 10\r\n        ) ? (\r\n          <CheckIcon className=\"h-5 w-5 text-green-600\" aria-hidden=\"true\" />\r\n        ) : (\r\n          <XMarkIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\r\n        )}\r\n\r\n        <span\r\n          className={`max-w-[80%] text-xs ${\r\n            answer1.length >= 10 &&\r\n            answer2.length >= 10 &&\r\n            answer3.length >= 10 &&\r\n            answer4.length >= 10\r\n              ? \"text-green-600\"\r\n              : \"text-red-500\"\r\n          }`}\r\n        >\r\n          Минимальная длина текста ответов должна составлять не менее 10\r\n          символов\r\n        </span>\r\n      </div>\r\n      <div className=\"mt-1 flex items-center gap-x-1.5\">\r\n        {answerRight != 0 && (\r\n          <CheckIcon className=\"h-5 w-5 text-green-600\" aria-hidden=\"true\" />\r\n        )}\r\n        {answerRight === 0 && (\r\n          <XMarkIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\r\n        )}\r\n        <span\r\n          className={`max-w-[80%] text-xs ${\r\n            answerRight != 0 ? \"text-green-600\" : \"text-red-500\"\r\n          }`}\r\n        >\r\n          Обязательно нужно выбрать верный вариант ответа (вопросы для всех\r\n          групп проходят модерацию)\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { CheckIcon, XMarkIcon } from \"@heroicons/react/24/outline\";\r\nimport { useState } from \"react\";\r\nimport { AnswersListValidate } from \"./AnswersListValidate\";\r\nimport { getQuestionAnswerFour, getQuestionAnswerOne, getQuestionAnswerThree, getQuestionAnswerTwo, getQuestionAnswerright, selectQuestion } from \"../store/slices/addQuestionApp.slice\";\r\nimport { useAddQuestionDispatch, useAddQuestionSelector } from \"@store/add-question\";\r\n\r\ninterface AnswersListProps {\r\n  onSubmit: () => void;\r\n}\r\n\r\nexport function AnswersList({ onSubmit }: AnswersListProps) {\r\n  const question = useAddQuestionSelector(selectQuestion); \r\n  const [selectedAnswerRight, setAnswerRight] = useState(question.answerright);\r\n  const [answer1, setAnswer1] = useState(question.answer1);\r\n  const [answer2, setAnswer2] = useState(question.answer2);\r\n  const [answer3, setAnswer3] = useState(question.answer3);\r\n  const [answer4, setAnswer4] = useState(question.answer4);\r\n  const dispatch = useAddQuestionDispatch();\r\n\r\n  const handleAnswer1 = (txt: string) => {\r\n    setAnswer1(txt);\r\n    dispatch(getQuestionAnswerOne(txt));\r\n  };\r\n  const handleAnswer2 = (txt: string) => {\r\n    setAnswer2(txt);\r\n    dispatch(getQuestionAnswerTwo(txt));\r\n  };\r\n  const handleAnswer3 = (txt: string) => {\r\n    setAnswer3(txt);\r\n    dispatch(getQuestionAnswerThree(txt));\r\n  };\r\n  const handleAnswer4 = (txt: string) => {\r\n    setAnswer4(txt);\r\n    dispatch(getQuestionAnswerFour(txt));\r\n  };\r\n  const hendelClick = (id: number) => {\r\n    setAnswerRight(id);\r\n    dispatch(getQuestionAnswerright(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"py-2\">\r\n        <div>\r\n          <label\r\n            htmlFor=\"answer1\"\r\n            className=\"block text-sm font-medium leading-6 text-[var(--tg-theme-text-color)]\"\r\n          >\r\n            Вариант ответа 1\r\n          </label>\r\n          <div className=\"mt-2 flex rounded-md shadow-sm\">\r\n            <div className=\"relative flex flex-grow items-stretch focus-within:z-10\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"answer1\"\r\n                id=\"answer1\"\r\n                className=\"block w-full bg-[var(--tg-theme-bg-color)] rounded-none rounded-l-md border-0 py-1.5 pl-2 text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] placeholder:text-gray-400\"\r\n                placeholder=\"Вариант ответа 1\"\r\n                value={answer1}\r\n                onChange={(e) => handleAnswer1(e.target.value)}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className={`relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 py-2 text-sm font-semibold text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] ${\r\n                selectedAnswerRight === 1 &&\r\n                \"bg-[var(--tg-theme-accent-text-color)]\"\r\n              }`}\r\n              onClick={() => hendelClick(1)}\r\n            >\r\n              {selectedAnswerRight === 1 ? (\r\n                <CheckIcon\r\n                  className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : (\r\n                <XMarkIcon\r\n                  className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label\r\n            htmlFor=\"answer2\"\r\n            className=\"block text-sm font-medium leading-6 text-[var(--tg-theme-text-color)]\"\r\n          >\r\n            Вариант ответа 2\r\n          </label>\r\n          <div className=\"mt-2 flex rounded-md shadow-sm\">\r\n            <div className=\"relative flex flex-grow items-stretch focus-within:z-10\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"answer2\"\r\n                id=\"answer2\"\r\n                className=\"block w-full bg-[var(--tg-theme-bg-color)] rounded-none rounded-l-md border-0 py-1.5 pl-2 text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] placeholder:text-gray-400\"\r\n                placeholder=\"Вариант ответа 2\"\r\n                value={answer2}\r\n                onChange={(e) => handleAnswer2(e.target.value)}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className={`relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 py-2 text-sm font-semibold text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] ${\r\n                selectedAnswerRight === 2 &&\r\n                \"bg-[var(--tg-theme-accent-text-color)]\"\r\n              }`}\r\n              onClick={() => hendelClick(2)}\r\n            >\r\n              {selectedAnswerRight === 2 ? (\r\n                <CheckIcon\r\n                  className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : (\r\n                <XMarkIcon\r\n                  className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label\r\n            htmlFor=\"answer3\"\r\n            className=\"block text-sm font-medium leading-6 text-[var(--tg-theme-text-color)]\"\r\n          >\r\n            Вариант ответа 3\r\n          </label>\r\n          <div className=\"mt-2 flex rounded-md shadow-sm\">\r\n            <div className=\"relative flex flex-grow items-stretch focus-within:z-10\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"answer3\"\r\n                id=\"answer3\"\r\n                className=\"block w-full bg-[var(--tg-theme-bg-color)] rounded-none rounded-l-md border-0 py-1.5 pl-2 text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] placeholder:text-gray-400\"\r\n                placeholder=\"Вариант ответа 3\"\r\n                value={answer3}\r\n                onChange={(e) => handleAnswer3(e.target.value)}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className={`relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 py-2 text-sm font-semibold text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] ${\r\n                selectedAnswerRight === 3 &&\r\n                \"bg-[var(--tg-theme-accent-text-color)]\"\r\n              }`}\r\n              onClick={() => hendelClick(3)}\r\n            >\r\n              {selectedAnswerRight === 3 ? (\r\n                <CheckIcon\r\n                  className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : (\r\n                <XMarkIcon\r\n                  className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label\r\n            htmlFor=\"answer4\"\r\n            className=\"block text-sm font-medium leading-6 text-[var(--tg-theme-text-color)]\"\r\n          >\r\n            Вариант ответа 4\r\n          </label>\r\n          <div className=\"mt-2 flex rounded-md shadow-sm\">\r\n            <div className=\"relative flex flex-grow items-stretch focus-within:z-10\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"answer4\"\r\n                id=\"answer4\"\r\n                className=\"block w-full bg-[var(--tg-theme-bg-color)] rounded-none rounded-l-md border-0 py-1.5 pl-2 text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] placeholder:text-gray-400\"\r\n                placeholder=\"Вариант ответа 4\"\r\n                value={answer4}\r\n                onChange={(e) => handleAnswer4(e.target.value)}\r\n              />\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className={`relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 py-2 text-sm font-semibold text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] ${\r\n                selectedAnswerRight === 4 &&\r\n                \"bg-[var(--tg-theme-accent-text-color)]\"\r\n              }`}\r\n              onClick={() => hendelClick(4)}\r\n            >\r\n              {selectedAnswerRight === 4 ? (\r\n                <CheckIcon\r\n                  className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : (\r\n                <XMarkIcon\r\n                  className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <AnswersListValidate\r\n        answer1={answer1}\r\n        answer2={answer2}\r\n        answer3={answer3}\r\n        answer4={answer4}\r\n        answerRight={selectedAnswerRight}\r\n        onSubmit={onSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n// {buttons.map((button) => (\r\n//   <div>\r\n//     <label\r\n//       htmlFor={button.data}\r\n//       className=\"block text-sm font-medium leading-6 text-[var(--tg-theme-text-color)]\"\r\n//     >\r\n//       {button.text}\r\n//     </label>\r\n//     <div className=\"mt-2 flex rounded-md shadow-sm\">\r\n//       <div className=\"relative flex flex-grow items-stretch focus-within:z-10\">\r\n//         <input\r\n//           type=\"text\"\r\n//           name={button.data}\r\n//           id={button.data}\r\n//           className=\"block w-full bg-[var(--tg-theme-bg-color)] rounded-none rounded-l-md border-0 py-1.5 pl-2 text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] placeholder:text-gray-400\"\r\n//           placeholder={button.text}\r\n//           value={button.data}\r\n//           onChange={(e) => updateFields({ answer1: e.target.value })}\r\n//         />\r\n//       </div>\r\n//       <button\r\n//         type=\"button\"\r\n//         className={`relative -ml-px inline-flex items-center gap-x-1.5 rounded-r-md px-3 py-2 text-sm font-semibold text-[var(--tg-theme-text-color)] ring-1 ring-inset ring-[var(--tg-theme-text-color)] ${\r\n//           selectedAnswerRight === button.id &&\r\n//           \"bg-[var(--tg-theme-accent-text-color)]\"\r\n//         }`}\r\n//         onClick={() => hendelClick(button.id)}\r\n//       >\r\n//         {selectedAnswerRight === button.id ? (\r\n//           <CheckIcon\r\n//             className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n//             aria-hidden=\"true\"\r\n//           />\r\n//         ) : (\r\n//           <XMarkIcon\r\n//             className=\"-ml-0.5 h-5 w-5 text-[var(--tg-theme-text-color)]\"\r\n//             aria-hidden=\"true\"\r\n//           />\r\n//         )}\r\n//       </button>\r\n//     </div>\r\n//   </div>\r\n// ))}\r\n\r\n// const buttons = [\r\n//   { id: 1, text: \"Вариант ответа 1\", data: answer1 },\r\n//   { id: 2, text: \"Вариант ответа 2\", data: answer2 },\r\n//   { id: 3, text: \"Вариант ответа 3\", data: answer3 },\r\n//   { id: 4, text: \"Вариант ответа 4\", data: answer4 },\r\n// ];\r\n","import {\r\n  useAddQuestionDispatch,\r\n  useAddQuestionSelector,\r\n} from '@store/add-question';\r\nimport {\r\n  getQuestionDefault,\r\n  selectQuestion,\r\n} from '../store/slices/addQuestionApp.slice';\r\nimport { useAddQuestionMutation } from '@api/question';\r\nimport StepsForm from './StepsForm';\r\nimport { TextList } from './TextList';\r\nimport { CategoryList } from './CategoryList';\r\nimport { AnswersList } from './AnswersList';\r\nimport { useNewQuestionForm } from '../hooks/useNewQuestionForm';\r\n\r\nfunction NewQuesion() {\r\n  const dispatch = useAddQuestionDispatch();\r\n  const user = 521884639;\r\n  const question = useAddQuestionSelector(selectQuestion);\r\n\r\n  async function onSubmit() {\r\n    if (!isLastStep) return next();\r\n    if (isLastStep) {\r\n      if (question.text != '') {\r\n        await addQuestion({\r\n          chat: user as unknown as bigint,\r\n          text: question.text,\r\n          category: question.category,\r\n          answer1: question.answer1,\r\n          answer2: question.answer2,\r\n          answer3: question.answer3,\r\n          answer4: question.answer4,\r\n          answerright: question.answerright,\r\n        });\r\n      }\r\n      dispatch(getQuestionDefault(''));\r\n    }\r\n  }\r\n\r\n  const { steps, currentStepIndex, step, isLastStep, next } =\r\n    useNewQuestionForm([\r\n      <TextList onSubmit={onSubmit} />,\r\n      <CategoryList onSubmit={onSubmit} />,\r\n      <AnswersList onSubmit={onSubmit} />,\r\n    ]);\r\n\r\n  const [addQuestion, {}] = useAddQuestionMutation();\r\n  return (\r\n    <>\r\n      <header className=\"absolute inset-x-0 top-0 z-50\">\r\n        <StepsForm step={currentStepIndex + 1} stepsCount={steps.length} />\r\n        <div className=\"bg-gradient-to-b from-[var(--tg-theme-bg-color)] to-transparent pt-12 w-screen\"></div>\r\n      </header>\r\n\r\n      <div className=\"h-full overflow-y-auto bg-[var(--tg-theme-bg-color)] p-8\">\r\n        <div className=\"py-24\">{step}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewQuesion;\r\n","import { ReactElement, useState } from \"react\"\r\n\r\nexport function useNewQuestionForm(steps: ReactElement[]) {\r\n  const [currentStepIndex, setCurrentStepIndex] = useState(0)\r\n\r\n  function next() {\r\n    setCurrentStepIndex(i => {\r\n      if (i >= steps.length - 1) return i\r\n      return i + 1\r\n    })\r\n  }\r\n\r\n  function back() {\r\n    setCurrentStepIndex(i => {\r\n      if (i <= 0) return i\r\n      return i - 1\r\n    })\r\n  }\r\n\r\n  function goTo(index: number) {\r\n    setCurrentStepIndex(index)\r\n  }\r\n\r\n  return {\r\n    currentStepIndex,\r\n    step: steps[currentStepIndex],\r\n    steps,\r\n    isFirstStep: currentStepIndex === 0,\r\n    isLastStep: currentStepIndex === steps.length - 1,\r\n    goTo,\r\n    next,\r\n    back,\r\n  }\r\n}","import { Provider } from \"react-redux\";\nimport { storeAddQuestion } from \"@store/add-question\";\nimport NewQuesion from \"./components/NewQuesion\";\n\nexport function App() {\n  return (\n    <Provider store={storeAddQuestion}>\n      <NewQuesion />\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createApi, fetchBaseQuery, retry } from '@reduxjs/toolkit/query/react';\r\n\r\nconst staggeredBaseQuery = retry(\r\n  fetchBaseQuery({ baseUrl: 'https://api80q.ru/viktorinaonlinebot/' }),\r\n  { maxRetries: 5 }\r\n);\r\n\r\nexport const globalApi = createApi({\r\n  reducerPath: 'vikApi',\r\n  refetchOnFocus: true,\r\n  baseQuery: staggeredBaseQuery,\r\n  tagTypes: [\r\n    'TypeGroup',\r\n    'TimeGroup',\r\n    'CategoryGroup',\r\n    'Validate',\r\n    'CountAvailableQuestionGroup',\r\n    'CountPublishedQuestionGroup',\r\n  ],\r\n  endpoints: () => ({}),\r\n});\r\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["addQuestionAppSlice","createSlice","name","initialState","text","category","answer1","answer2","answer3","answer4","answerright","reducers","getQuestionText","state","action","payload","getQuestionCategory","getQuestionAnswerOne","getQuestionAnswerTwo","getQuestionAnswerThree","getQuestionAnswerFour","getQuestionAnswerright","getQuestionDefault","actions","selectQuestionText","addQuestionApp","selectQuestionCategory","selectQuestion","storeAddQuestion","configureStore","reducer","globalApi","reducerPath","useAddQuestionDispatch","useDispatch","useAddQuestionSelector","useSelector","extendedApiSlice","injectEndpoints","endpoints","build","getQuestionById","query","id","url","getQuestionByChat","chat","updateQuestion","mutation","question","method","body","addQuestion","deleteQuestion","countAvailableQuestion","providesTags","countPublishedQuestion","useGetQuestionByChatQuery","useGetQuestionByIdQuery","useAddQuestionMutation","useDeleteQuestionMutation","useUpdateQuestionMutation","useCountAvailableQuestionQuery","useCountPublishedQuestionQuery","StepsForm","step","stepsCount","steps","i","push","status","_jsxs","className","children","_jsx","role","map","title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","tg","window","Telegram","WebApp","TextListValidate","onSubmit","length","substring","MainButton","setText","show","onEvent","hide","CheckIcon","XMarkIcon","ApplyDraft","showNotification","setShowNotification","applyDraft","_Fragment","Transition","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","type","onClick","TextList","questionText","dispatch","useState","useEffect","handleText","txt","htmlFor","rows","value","onChange","e","target","mona","CategoryList","questionCategory","data","allCategory","isSuccess","successCategory","useGetCategoryQuery","selectedCategory","setCategory","find","classNames","classes","filter","Boolean","join","Listbox","cat","open","Label","Button","ChevronUpDownIcon","Options","Option","active","selected","AnswersListValidate","answerRight","AnswersList","selectedAnswerRight","setAnswerRight","setAnswer1","setAnswer2","setAnswer3","setAnswer4","hendelClick","placeholder","handleAnswer1","handleAnswer2","handleAnswer3","handleAnswer4","async","isLastStep","next","currentStepIndex","setCurrentStepIndex","isFirstStep","goTo","index","back","useNewQuestionForm","Provider","store","NewQuesion","staggeredBaseQuery","retry","fetchBaseQuery","baseUrl","maxRetries","createApi","refetchOnFocus","baseQuery","tagTypes","f","k","Symbol","for","l","m","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","__self","__source","q","c","a","g","b","h","call","defaultProps","$$typeof","_owner","current","exports","jsx","jsxs","module"],"sourceRoot":""}