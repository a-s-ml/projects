{"version":3,"file":"700.js","mappings":"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","sources":["webpack://quiz/./src/app/store/slices/quizApp.slice.ts","webpack://quiz/./src/app/store/index.ts","webpack://quiz/../../node_modules/@heroicons/react/24/outline/esm/PhotoIcon.js","webpack://quiz/../../node_modules/@heroicons/react/24/outline/esm/ListBulletIcon.js","webpack://quiz/../../node_modules/@heroicons/react/24/outline/esm/CloudArrowDownIcon.js","webpack://quiz/../../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","webpack://quiz/../../node_modules/@heroicons/react/24/outline/esm/ScaleIcon.js","webpack://quiz/../../node_modules/@heroicons/react/24/outline/esm/NoSymbolIcon.js","webpack://quiz/../../libs/api/src/group.api.ts","webpack://quiz/../../libs/api/src/type.api.ts","webpack://quiz/./src/app/components/SettingsQuiz/CategoryQuiz.tsx","webpack://quiz/../../libs/api/src/period.api.ts","webpack://quiz/./src/app/const/nightTime.const.ts","webpack://quiz/./src/app/components/SettingsQuiz/DifficultyQuiz.tsx","webpack://quiz/./src/app/components/SettingsQuiz/NotactiveSittings.tsx","webpack://quiz/./src/app/const/settingsQuiz.const.ts","webpack://quiz/./src/app/components/SettingsQuiz/TypeQuiz.tsx","webpack://quiz/./src/app/components/SettingsQuiz/PeriodQuiz.tsx","webpack://quiz/./src/app/components/SettingsQuiz/TimeQuiz.tsx","webpack://quiz/./src/app/const/typeNewQuiz.const.ts","webpack://quiz/./src/app/components/NewQuiz/BotQuiz.tsx","webpack://quiz/./src/app/components/NewQuiz/UserQuiz.tsx","webpack://quiz/./src/app/components/NewQuiz.tsx","webpack://quiz/./src/app/components/QuizPage.tsx","webpack://quiz/./src/app/app.tsx","webpack://quiz/../../libs/api/src/global.api.ts","webpack://quiz/../../libs/utils/src/func.ts","webpack://quiz/../../node_modules/@heroicons/react/24/outline/esm/ChevronDownIcon.js","webpack://quiz/../../node_modules/@heroicons/react/24/outline/esm/ChevronUpIcon.js","webpack://quiz/../../node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://quiz/../../node_modules/react/jsx-runtime.js"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { IValidate } from '@models';\r\nimport { QuizRootState } from '..';\r\n\r\nexport interface quizAppState {\r\n  quizSlide: boolean;\r\n  quizType: string;\r\n  quizData: IValidate | undefined;\r\n}\r\n\r\nconst initialState: quizAppState = {\r\n  quizSlide: false,\r\n  quizType: '',\r\n  quizData: undefined,\r\n};\r\n\r\nexport const quizAppSlice = createSlice({\r\n  name: 'quizApp',\r\n  initialState,\r\n  reducers: {\r\n    showQuizSlide: (state, action: PayloadAction<boolean>) => {\r\n      state.quizSlide = action.payload;\r\n    },\r\n    typeQuiz: (state, action: PayloadAction<string>) => {\r\n      state.quizType = action.payload;\r\n    },\r\n    dataQuiz: (state, action: PayloadAction<IValidate>) => {\r\n      state.quizData = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { dataQuiz, showQuizSlide, typeQuiz } = quizAppSlice.actions;\r\n\r\nexport const selectQuizSlide = (state: QuizRootState) =>\r\n  state.quizApp.quizSlide;\r\nexport const selectQuizData = (state: QuizRootState) => state.quizApp.quizData;\r\nexport const selectQuizType = (state: QuizRootState) => state.quizApp.quizType;\r\n\r\nexport default quizAppSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { globalApi } from '@api/global';\r\nimport QuizAppSlice from './slices/quizApp.slice';\r\n\r\nexport const storeQuiz = configureStore({\r\n  reducer: {\r\n    [globalApi.reducerPath]: globalApi.reducer,\r\n    quizApp: QuizAppSlice,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(globalApi.middleware),\r\n});\r\n\r\nexport type QuizDispatch = typeof storeQuiz.dispatch;\r\nexport type QuizRootState = ReturnType<typeof storeQuiz.getState>;\r\n\r\nexport const useQuizDispatch = () => useDispatch<QuizDispatch>();\r\nexport const useQuizSelector: TypedUseSelectorHook<QuizRootState> = useSelector;\r\n","import * as React from \"react\";\nfunction PhotoIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(PhotoIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ListBulletIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0ZM3.75 12h.007v.008H3.75V12Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Zm-.375 5.25h.007v.008H3.75v-.008Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ListBulletIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CloudArrowDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9.75v6.75m0 0-3-3m3 3 3-3m-8.25 6a4.5 4.5 0 0 1-1.41-8.775 5.25 5.25 0 0 1 10.233-2.33 3 3 0 0 1 3.758 3.848A3.752 3.752 0 0 1 18 19.5H6.75Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(CloudArrowDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ClockIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ScaleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 3v17.25m0 0c-1.472 0-2.882.265-4.185.75M12 20.25c1.472 0 2.882.265 4.185.75M18.75 4.97A48.416 48.416 0 0 0 12 4.5c-2.291 0-4.545.16-6.75.47m13.5 0c1.01.143 2.01.317 3 .52m-3-.52 2.62 10.726c.122.499-.106 1.028-.589 1.202a5.988 5.988 0 0 1-2.031.352 5.988 5.988 0 0 1-2.031-.352c-.483-.174-.711-.703-.59-1.202L18.75 4.971Zm-16.5.52c.99-.203 1.99-.377 3-.52m0 0 2.62 10.726c.122.499-.106 1.028-.589 1.202a5.989 5.989 0 0 1-2.031.352 5.989 5.989 0 0 1-2.031-.352c-.483-.174-.711-.703-.59-1.202L5.25 4.971Z\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ScaleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction NoSymbolIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M18.364 18.364A9 9 0 0 0 5.636 5.636m12.728 12.728A9 9 0 0 1 5.636 5.636m12.728 12.728L5.636 5.636\"\n  }));\n}\nconst ForwardRef = React.forwardRef(NoSymbolIcon);\nexport default ForwardRef;","import { IChat } from \"@models\";\r\nimport { IGroup } from \"@models\";\r\nimport { globalApi } from \"@api/global\";\r\n\r\nexport const extendedApiSlice = globalApi.injectEndpoints({\r\n  endpoints: (build) => ({\r\n    getGroups: build.query<IGroup[], number>({\r\n      query: (chat) => ({\r\n        url: `chat/findByReferal/${chat}`,\r\n      }),\r\n      providesTags: ['TypeGroup', 'TimeGroup', 'CategoryGroup']\r\n    }),\r\n    getInfoGroups: build.query<IChat, bigint>({\r\n      query: (chat) => ({\r\n        url: `chat/groupInfoById/${chat}`,\r\n      }),\r\n    }),\r\n    getGroupDb: build.query<IGroup, bigint>({\r\n      query: (chat) => ({\r\n        url: `chat/findByChatId/${chat}`,\r\n      }),\r\n      providesTags: ['TypeGroup', 'TimeGroup']\r\n    }),\r\n    getMemberCountGroups: build.query<number, number>({\r\n      query: (chat) => ({\r\n        url: `chat/groupMemberCountById/${chat}`,\r\n      }),\r\n    }),\r\n    getFilePhoto: build.query<string, string>({\r\n      query: (id) => ({\r\n        url: `chat/tgGetFilePhoto/${id}`,\r\n      }),\r\n    }),\r\n\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetFilePhotoQuery,\r\n  useGetGroupsQuery,\r\n  useGetInfoGroupsQuery,\r\n  useGetMemberCountGroupsQuery,\r\n  useGetGroupDbQuery\r\n} = extendedApiSlice;\r\n","import { IReqTypeGroup } from \"@models\";\r\nimport { IType } from \"@models\";\r\nimport { globalApi } from \"@api/global\";\r\n\r\nexport const extendedApiSlice = globalApi.injectEndpoints({\r\n  endpoints: (build) => ({\r\n\r\n    getType: build.query<IType[], string>({\r\n      query: () => ({\r\n        url: `question-type`,\r\n      }),\r\n    }),\r\n\r\n    getTypeById: build.query<IType, number>({\r\n      query: (type) => ({\r\n        url: `question-type/${type}`,\r\n      }),\r\n      providesTags: ['TypeGroup']\r\n    }),\r\n\r\n    updateTypeGroups: build.mutation<IType, IReqTypeGroup>({\r\n      query: ({ chat, question_type }) => ({\r\n        url: `/chat/updateTypeChat/${chat}`,\r\n        method: \"PATCH\",\r\n        body: { question_type },\r\n      }),\r\n      invalidatesTags: [\"TypeGroup\"]\r\n    }),\r\n    \r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetTypeQuery,\r\n  useGetTypeByIdQuery,\r\n  useUpdateTypeGroupsMutation\r\n} = extendedApiSlice;\r\n","import {\r\n  useGetCategoryQuery,\r\n  useGetCategoryGroupsQuery,\r\n  useAddCategoryGroupsMutation,\r\n  useDeleteCategoryGroupsMutation,\r\n} from '@api/category';\r\nimport { SimpleCheckbox } from '@components';\r\nimport { inDevelopment } from '@utils';\r\n\r\nexport const CategoryQuiz = () => {\r\n  const { data: allCategory } = useGetCategoryQuery('');\r\n  const chat = 521884639;\r\n  const { data: GroupCategory } = useGetCategoryGroupsQuery(\r\n    chat as unknown as bigint\r\n  );\r\n  const [setCategory, {}] = useAddCategoryGroupsMutation();\r\n  const [deleteCategory, {}] = useDeleteCategoryGroupsMutation();\r\n\r\n  async function categoryChanged(check: boolean, category: number) {\r\n    if (!check) {\r\n      // await setCategory({ chat, category });\r\n    }\r\n    if (check) {\r\n      // deleteCategory({ chat, category });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`grid grid-cols-2 gap-2`}>\r\n      {GroupCategory &&\r\n        allCategory &&\r\n        allCategory.map((item) => (\r\n          <SimpleCheckbox\r\n            key={item.id}\r\n            data={item}\r\n            disabled={item.id === 1001 || item.id === 85 ? true : false}\r\n            checked={\r\n              GroupCategory.find((itm) => itm.category === item.id)\r\n                ? false\r\n                : true\r\n            }\r\n            func={categoryChanged}\r\n          />\r\n        ))}\r\n      <SimpleCheckbox\r\n        data={{ id: 999, name: 'Добавить' }}\r\n        checked={false}\r\n        disabled={true}\r\n        func={inDevelopment}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryQuiz;\r\n","import { IReqTimeGroup } from \"@models\";\r\nimport { ITime } from \"@models\";\r\nimport { globalApi } from \"@api/global\";\r\n\r\nexport const extendedApiSlice = globalApi.injectEndpoints({\r\n  endpoints: (build) => ({\r\n\r\n    getTime: build.query<ITime[], string>({\r\n      query: () => ({\r\n        url: `time`,\r\n      }),\r\n    }),\r\n    \r\n    getTimeById: build.query<ITime, number>({\r\n      query: (time) => ({\r\n        url: `time/${time}`,\r\n      }),\r\n      providesTags: ['TimeGroup']\r\n    }),\r\n    \r\n    updateTimeGroups: build.mutation<ITime, IReqTimeGroup>({\r\n      query: ({ chat, time }) => ({\r\n        url: `/chat/updateTimeChat/${chat}`,\r\n        method: \"PATCH\",\r\n        body: { time },\r\n      }),\r\n      invalidatesTags: [\"TimeGroup\"]\r\n    }),\r\n\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetTimeQuery,\r\n  useGetTimeByIdQuery,\r\n  useUpdateTimeGroupsMutation\r\n} = extendedApiSlice;\r\n","export const nightTimeConst = [\r\n  { id: 0, name: '00:00', night: true },\r\n  { id: 1, name: '01:00', night: true },\r\n  { id: 2, name: '02:00', night: true },\r\n  { id: 3, name: '03:00', night: true },\r\n  { id: 4, name: '04:00', night: true },\r\n  { id: 5, name: '05:00', night: true },\r\n  { id: 6, name: '06:00', night: true },\r\n  { id: 7, name: '07:00', night: true },\r\n  { id: 8, name: '08:00', night: true },\r\n  { id: 9, name: '09:00', night: false },\r\n  { id: 10, name: '10:00', night: false },\r\n  { id: 11, name: '11:00', night: false },\r\n  { id: 12, name: '12:00', night: false },\r\n  { id: 13, name: '13:00', night: false },\r\n  { id: 14, name: '14:00', night: false },\r\n  { id: 15, name: '15:00', night: false },\r\n  { id: 16, name: '16:00', night: false },\r\n  { id: 17, name: '17:00', night: false },\r\n  { id: 18, name: '18:00', night: false },\r\n  { id: 19, name: '19:00', night: false },\r\n  { id: 20, name: '20:00', night: false },\r\n  { id: 21, name: '21:00', night: false },\r\n  { id: 22, name: '22:00', night: false },\r\n  { id: 23, name: '23:00', night: true },\r\n];\r\n","import { Disclosure } from '@headlessui/react';\r\nimport {\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n  ScaleIcon,\r\n} from '@heroicons/react/24/outline';\r\n\r\nexport const DifficultyQuiz = () => {\r\n  return (\r\n    <Disclosure as=\"div\">\r\n      {({ open }) => (\r\n        <>\r\n          <li className=\"py-4 px-0\">\r\n            <Disclosure.Button className=\"group relative flex w-full items-start justify-between space-x-3\">\r\n              <div className=\"flex-shrink-0\">\r\n                <span className=\"inline-flex h-5 w-5 items-center justify-center rounded-lg\">\r\n                  <ScaleIcon\r\n                    className=\"h-5 w-5 text-[var(--tg-theme-accent-text-color)]\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              <div className=\"min-w-0 flex-1 text-left\">\r\n                <div className=\"text-sm font-medium text-[var(--tg-theme-text-color)]\">\r\n                  Сложность вопросов\r\n                </div>\r\n              </div>\r\n              <div className=\"flex-shrink-0 self-center text-right\">\r\n                {open ? (\r\n                  <ChevronUpIcon\r\n                    className=\"h-5 w-5 text-[var(--tg-theme-accent-text-color)] group-hover:text-[var(--tg-theme-text-color)]\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                ) : (\r\n                  <ChevronDownIcon\r\n                    className=\"h-5 w-5 text-[var(--tg-theme-accent-text-color)] group-hover:text-[var(--tg-theme-text-color)]\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </Disclosure.Button>\r\n          </li>\r\n          <Disclosure.Panel className=\"py-4\">\r\n            <div className=\"space-y-1.5 columns-2\"></div>\r\n          </Disclosure.Panel>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n  );\r\n};\r\n\r\nexport default DifficultyQuiz;","import { NoSymbolIcon, ChevronDownIcon } from '@heroicons/react/24/outline';\r\nimport { Disclosure } from '@headlessui/react';\r\n\r\nexport const NotactiveSittings = () => {\r\n  return (\r\n    <>\r\n      <Disclosure as=\"div\">\r\n        <li className=\"py-4 px-0\">\r\n          <Disclosure.Button className=\"group relative flex w-full items-start justify-between space-x-3\">\r\n            <div className=\"flex-shrink-0\">\r\n              <span className=\"inline-flex h-5 w-5 items-center justify-center rounded-lg\">\r\n                <NoSymbolIcon\r\n                  className=\"h-5 w-5 text-[var(--tg-theme-accent-text-color)]\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              </span>\r\n            </div>\r\n            <div className=\"min-w-0 flex-1 text-left\">\r\n              <div className=\"text-sm font-medium text-[var(--tg-theme-hint-color)]\">\r\n                none\r\n              </div>\r\n            </div>\r\n            <div className=\"flex-shrink-0 self-center text-right\">\r\n              <ChevronDownIcon\r\n                className=\"h-5 w-5 text-[var(--tg-theme-hint-color)]\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            </div>\r\n          </Disclosure.Button>\r\n        </li>\r\n      </Disclosure>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotactiveSittings;\r\n","import {\r\n  ClockIcon,\r\n  CloudArrowDownIcon,\r\n  ListBulletIcon,\r\n  NoSymbolIcon,\r\n  PhotoIcon,\r\n  ScaleIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport { ForwardRefExoticComponent, SVGProps } from 'react';\r\nimport TypeQuiz from '../components/SettingsQuiz/TypeQuiz';\r\nimport CategoryQuiz from '../components/SettingsQuiz/CategoryQuiz';\r\nimport PeriodQuiz from '../components/SettingsQuiz/PeriodQuiz';\r\nimport TimeQuiz from '../components/SettingsQuiz/TimeQuiz';\r\nimport DifficultyQuiz from '../components/SettingsQuiz/DifficultyQuiz';\r\nimport NotactiveSittings from '../components/SettingsQuiz/NotactiveSittings';\r\n\r\ninterface typeNewQuizInterface {\r\n  id: number;\r\n  name: string;\r\n  type: string;\r\n  icon: ForwardRefExoticComponent<Omit<SVGProps<SVGSVGElement>, 'ref'>>;\r\n  component: () => JSX.Element;\r\n}\r\n\r\nexport const typeNewQuizConst: typeNewQuizInterface[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Вид вопросов',\r\n    type: 'type',\r\n    icon: PhotoIcon,\r\n    component: TypeQuiz,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Категории вопросов',\r\n    type: 'category',\r\n    icon: ListBulletIcon,\r\n    component: CategoryQuiz,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Период публикаций',\r\n    type: 'period',\r\n    icon: CloudArrowDownIcon,\r\n    component: PeriodQuiz,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Время публикаций',\r\n    type: 'time',\r\n    icon: ClockIcon,\r\n    component: TimeQuiz,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Сложность вопросов',\r\n    type: 'вifficulty',\r\n    icon: ScaleIcon,\r\n    component: DifficultyQuiz,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Время на ответ',\r\n    type: 'none',\r\n    icon: NoSymbolIcon,\r\n    component: NotactiveSittings,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Статистика',\r\n    type: 'none',\r\n    icon: NoSymbolIcon,\r\n    component: NotactiveSittings,\r\n  },\r\n];\r\n","import { useGetGroupDbQuery } from '@api/group';\r\nimport {\r\n  useGetTypeByIdQuery,\r\n  useGetTypeQuery,\r\n  useUpdateTypeGroupsMutation,\r\n} from '@api/type';\r\nimport {\r\n  Preloader,\r\n  SimpleRadioGroup,\r\n  SimpleRadioGroupOption,\r\n} from '@components';\r\nimport { useState } from 'react';\r\n\r\nexport const TypeQuiz = () => {\r\n  const {\r\n    data: allTypes,\r\n    isLoading: loadingAllTypes,\r\n    isSuccess: successAllTypes,\r\n  } = useGetTypeQuery('');\r\n  const chat = 521884639;\r\n  const { data: GroupDb } = useGetGroupDbQuery(chat as unknown as bigint);\r\n  const { data: GroupType } = useGetTypeByIdQuery(GroupDb?.question_type || 0);\r\n  const [typeState, setType] = useState(GroupType?.id);\r\n\r\n  const [updateTypeGroup, {}] = useUpdateTypeGroupsMutation();\r\n\r\n  function typeChanged(question_type: number) {\r\n    setType(question_type);\r\n    // updateTypeGroup({ chat, question_type });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {allTypes && typeof typeState == 'number' && (\r\n        <SimpleRadioGroup state={typeState} setState={setType}>\r\n          <div className={`grid grid-cols-3 gap-2`}>\r\n            {loadingAllTypes && <Preloader />}\r\n            {GroupType &&\r\n              allTypes &&\r\n              allTypes.map((item) => (\r\n                <SimpleRadioGroupOption\r\n                  key={item.id}\r\n                  id={item.id}\r\n                  description={item.description}\r\n                  active={Boolean(item.active)}\r\n                  func={typeChanged}\r\n                />\r\n              ))}\r\n          </div>\r\n        </SimpleRadioGroup>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TypeQuiz;\r\n","import { useGetGroupDbQuery } from '@api/group';\r\nimport {\r\n  useGetTimeByIdQuery,\r\n  useGetTimeQuery,\r\n  useUpdateTimeGroupsMutation,\r\n} from '@api/period';\r\nimport {\r\n  Preloader,\r\n  SimpleRadioGroup,\r\n  SimpleRadioGroupOption,\r\n} from '@components';\r\nimport { useState } from 'react';\r\n\r\nexport const PeriodQuiz = () => {\r\n  const {\r\n    data: allPeriod,\r\n    isLoading: loadingAllPeriod,\r\n    isSuccess: successAllPeriod,\r\n  } = useGetTimeQuery('');\r\n  const chat = 521884639;\r\n  const { data: GroupDb } = useGetGroupDbQuery(chat as unknown as bigint);\r\n  const { data: GroupPeriod } = useGetTimeByIdQuery(GroupDb?.time || 0);\r\n\r\n  const [timeState, setTime] = useState(GroupPeriod?.id);\r\n\r\n  const [updateTimeGroup, {}] = useUpdateTimeGroupsMutation();\r\n\r\n  function timeChanged(time: number) {\r\n    setTime(time);\r\n    // updateTimeGroup({ chat, time });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loadingAllPeriod && <Preloader />}\r\n      {typeof timeState == 'number' && (\r\n        <SimpleRadioGroup state={timeState} setState={setTime}>\r\n          <div className={`grid grid-cols-4 gap-2`}>\r\n            {GroupPeriod &&\r\n              allPeriod &&\r\n              allPeriod.map((item) => (\r\n                <SimpleRadioGroupOption\r\n                  key={item.id}\r\n                  id={item.id}\r\n                  description={item.name}\r\n                  active={true}\r\n                  func={timeChanged}\r\n                />\r\n              ))}\r\n          </div>\r\n        </SimpleRadioGroup>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PeriodQuiz;\r\n","import { useGetGroupDbQuery } from '@api/group';\r\nimport { nightTimeConst } from '../../const/nightTime.const';\r\nimport { useGetTimeByIdQuery } from '@api/period';\r\nimport { useState } from 'react';\r\nimport { SimpleSwitchButton } from '@components';\r\n\r\nexport const TimeQuiz = () => {\r\n  const chat = 521884639;\r\n  const { data: GroupDb } = useGetGroupDbQuery(chat as unknown as bigint);\r\n  const { data: GroupTime } = useGetTimeByIdQuery(GroupDb?.time || 0);\r\n  const [times, setTimes] = useState(0);\r\n  const [nightNode, setNightNode] = useState(true);\r\n  let hours: Array<number> = [];\r\n  let period: number;\r\n  GroupTime ? (period = GroupTime.period / 3600) : (period = 25);\r\n  for (let b = times - period; b >= 0; b -= period) {\r\n    hours.push(b);\r\n  }\r\n  for (let a = times; a < 24; a += period) {\r\n    hours.push(a);\r\n  }\r\n  let sortHours: Array<number> = hours.sort((n1, n2) => n1 - n2);\r\n\r\n  return (\r\n    <>\r\n      <SimpleSwitchButton\r\n        label={'Публикация вопросов ночью'}\r\n        enabled={nightNode}\r\n        setEnabled={setNightNode}\r\n      />\r\n      <div className={`grid grid-cols-6 gap-2`}>\r\n        {nightTimeConst.map((time) => (\r\n          <button\r\n            type=\"button\"\r\n            value={time.id}\r\n            onClick={() => setTimes(time.id)}\r\n            className={`flex items-center justify-center rounded-md py-2 px-2 text-xs font-semibold \r\n                                ${\r\n                                  Boolean(\r\n                                    nightNode === false &&\r\n                                      time.night == true &&\r\n                                      !sortHours.includes(time.id)\r\n                                  )\r\n                                    ? 'bg-[var(--tg-theme-hint-color)] text-black cursor-not-allowed'\r\n                                    : ''\r\n                                }\r\n                                ${\r\n                                  Boolean(\r\n                                    nightNode === false &&\r\n                                      time.night == false &&\r\n                                      !sortHours.includes(time.id)\r\n                                  )\r\n                                    ? 'bg-white text-black cursor-pointer'\r\n                                    : ''\r\n                                }\r\n                                ${\r\n                                  Boolean(\r\n                                    nightNode === false &&\r\n                                      time.night == true &&\r\n                                      sortHours.includes(time.id)\r\n                                  )\r\n                                    ? 'bg-[var(--tg-theme-hint-color)] text-black cursor-not-allowed'\r\n                                    : ''\r\n                                }\r\n                                ${\r\n                                  Boolean(\r\n                                    nightNode === false &&\r\n                                      time.night == false &&\r\n                                      sortHours.includes(time.id)\r\n                                  )\r\n                                    ? 'bg-[var(--tg-theme-accent-text-color)] text-white cursor-pointer'\r\n                                    : ''\r\n                                }\r\n                                ${\r\n                                  Boolean(\r\n                                    nightNode === true &&\r\n                                      time.night == true &&\r\n                                      sortHours.includes(time.id)\r\n                                  )\r\n                                    ? 'bg-[var(--tg-theme-accent-text-color)] text-white cursor-pointer'\r\n                                    : ''\r\n                                }\r\n                                ${\r\n                                  Boolean(\r\n                                    nightNode === true &&\r\n                                      time.night == false &&\r\n                                      sortHours.includes(time.id)\r\n                                  )\r\n                                    ? 'bg-[var(--tg-theme-accent-text-color)] text-white cursor-pointer'\r\n                                    : ''\r\n                                }\r\n                                ${\r\n                                  Boolean(\r\n                                    nightNode === true &&\r\n                                      time.night == false &&\r\n                                      !sortHours.includes(time.id)\r\n                                  )\r\n                                    ? 'bg-white text-black cursor-pointer'\r\n                                    : ''\r\n                                }\r\n                                ${\r\n                                  Boolean(\r\n                                    nightNode === true &&\r\n                                      time.night == true &&\r\n                                      !sortHours.includes(time.id)\r\n                                  )\r\n                                    ? 'bg-white text-black cursor-pointer'\r\n                                    : ''\r\n                                }\r\n                                `}\r\n            disabled={Boolean(nightNode === false && time.night === true)}\r\n          >\r\n            {time.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TimeQuiz;\r\n","import { BotQuiz } from \"../components/NewQuiz/BotQuiz\";\r\nimport { UserQuiz } from \"../components/NewQuiz/UserQuiz\";\r\n\r\ninterface tabsInterface {\r\n    name: string;\r\n    type: string;\r\n    component: () => JSX.Element;\r\n  }\r\n  \r\n  export const typeNewQuizConst: tabsInterface[] = [\r\n    {\r\n      name: 'Вопросы бота',\r\n      type: 'bot',\r\n      component: BotQuiz,\r\n    },\r\n    {\r\n      name: 'Свои вопросы',\r\n      type: 'user',\r\n      component: UserQuiz,\r\n    },\r\n  ];","import {\r\n  SimpleAccordionIcon,\r\n  SimpleAccordionMain,\r\n  SimpleAccordionText,\r\n} from '@components';\r\nimport { typeNewQuizConst } from '../../const/settingsQuiz.const';\r\n\r\nexport const BotQuiz = () => {\r\n  return (\r\n    <>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"divide-y divide-[var(--tg-theme-hint-color)] pt-9\"\r\n      >\r\n        {typeNewQuizConst.map((item) => (\r\n          <SimpleAccordionMain\r\n            key={item.id}\r\n            description={\r\n              <>\r\n                <SimpleAccordionIcon size={5}>\r\n                  <item.icon\r\n                    className=\"h-5 w-5 text-[var(--tg-theme-accent-text-color)]\"\r\n                    aria-hidden=\"true\"\r\n                  />\r\n                </SimpleAccordionIcon>\r\n                <SimpleAccordionText>\r\n                  <div className=\"text-sm font-medium text-[var(--tg-theme-text-color)]\">\r\n                    {item.name}\r\n                  </div>\r\n                </SimpleAccordionText>\r\n              </>\r\n            }\r\n            content={<item.component />}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <div className=\"pb-12 mb-8\"></div>\r\n    </>\r\n  );\r\n};\r\n","export const UserQuiz = () => {\r\n  return <p>UserQuiz</p>;\r\n};\r\n","import { MainBlock, Page, SimpleTabs } from '@components';\r\nimport { typeNewQuizConst } from '../const/typeNewQuiz.const';\r\n\r\nexport const NewQuiz = () => {\r\n  return (\r\n    <Page>\r\n      <MainBlock>\r\n        <SimpleTabs title={'Новая викторина'} tabs={typeNewQuizConst} />\r\n      </MainBlock>\r\n    </Page>\r\n  );\r\n};\r\n","import {\r\n  GlobalHeader,\r\n  ButtonIcon,\r\n  Page,\r\n  MainBlock,\r\n  SlidePage,\r\n} from '@components';\r\nimport { NewQuiz } from './NewQuiz';\r\nimport { useQuizDispatch, useQuizSelector } from '@store/quiz';\r\nimport {\r\n  selectQuizSlide,\r\n  selectQuizType,\r\n  showQuizSlide,\r\n  typeQuiz,\r\n} from '../store/slices/quizApp.slice';\r\n\r\nexport const QuizPage = () => {\r\n  const tg = window.Telegram.WebApp;\r\n  const dispatch = useQuizDispatch();\r\n  const slide = useQuizSelector(selectQuizSlide);\r\n  const type = useQuizSelector(selectQuizType);\r\n\r\n  if (slide) {\r\n    tg.BackButton.show();\r\n    tg.onEvent('backButtonClicked', () => {\r\n      dispatch(showQuizSlide(false));\r\n    });\r\n  }\r\n  \r\n  const addQuiz = () => {\r\n    dispatch(typeQuiz('addQuiz'));\r\n    dispatch(showQuizSlide(true));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalHeader>\r\n        <ButtonIcon\r\n          firstIcon={true}\r\n          text={'Создать викторину'}\r\n          color={'[var(--tg-theme-accent-text-color)]'}\r\n          icon={'add'}\r\n          func={addQuiz}\r\n        />\r\n      </GlobalHeader>\r\n      <Page>\r\n        <MainBlock>\r\n          <div className=\"text-center pt-9\"></div>\r\n          <p>QuizPage</p>\r\n        </MainBlock>\r\n      </Page>\r\n      <SlidePage slide={slide}>\r\n        {type == 'addQuiz' && <NewQuiz />}\r\n      </SlidePage>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n","import { Provider } from 'react-redux';\r\nimport { storeQuiz } from './store/index';\r\nimport QuizPage from './components/QuizPage';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Provider store={storeQuiz}>\r\n      <QuizPage />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createApi, fetchBaseQuery, retry } from '@reduxjs/toolkit/query/react';\r\n\r\nconst staggeredBaseQuery = retry(\r\n  fetchBaseQuery({ baseUrl: 'https://api80q.ru/viktorinaonlinebot/' }),\r\n  { maxRetries: 5 }\r\n);\r\n\r\nexport const globalApi = createApi({\r\n  reducerPath: 'vikApi',\r\n  refetchOnFocus: true,\r\n  baseQuery: staggeredBaseQuery,\r\n  tagTypes: [\r\n    'TypeGroup',\r\n    'TimeGroup',\r\n    'CategoryGroup',\r\n    'Validate',\r\n    'CountAvailableQuestionGroup',\r\n    'CountPublishedQuestionGroup',\r\n  ],\r\n  endpoints: () => ({}),\r\n});\r\n","const tg = window.Telegram.WebApp;\r\n\r\ninterface IAnswers {\r\n  id: number;\r\n  name: string;\r\n  value: string;\r\n}\r\ninterface IValidationLengthForm {\r\n  value: string | number | IAnswers[];\r\n  lengthMin: number;\r\n  lengthMax: number;\r\n}\r\n\r\nexport const classNames = (...classes: string[]) => {\r\n  return classes.filter(Boolean).join(' ');\r\n};\r\n\r\nexport const addGroup = () => {\r\n  tg.openTelegramLink('https://t.me/ViktorinaOnlineBot?startgroup=add');\r\n};\r\n\r\nexport const inDevelopment = () => {\r\n  tg.showAlert(\r\n    'Данная функция находится в разработке',\r\n    console.log('inDevelopment')\r\n  );\r\n};\r\n\r\nexport const deleteGroup = (b: boolean) => {\r\n  if (b) return tg.openTelegramLink('https://t.me/more_details');\r\n  return;\r\n};\r\n\r\nexport const deleteQuestion = (b: boolean) => {\r\n  if (b) return tg.openTelegramLink('https://t.me/more_details');\r\n  return;\r\n};\r\n\r\nexport const validationLengthForm = (data: IValidationLengthForm): boolean => {\r\n  if (typeof data.value === 'string') {\r\n    if (\r\n      data.value.length < data.lengthMin ||\r\n      data.value.length > data.lengthMax\r\n    ) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  if (typeof data.value === 'number') {\r\n    if (data.value === 0) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  if (typeof data.value === 'object') {\r\n    let x: number = 0;\r\n    let res: boolean = false;\r\n    data.value.map((item) => {\r\n      if (\r\n        item.value.length >= data.lengthMin &&\r\n        item.value.length < data.lengthMax\r\n      ) {\r\n        x++;\r\n      }\r\n    });\r\n    x === data.value.length ? (res = true) : (res = false);\r\n    return res;\r\n  }\r\n  return false;\r\n};\r\n","import * as React from \"react\";\nfunction ChevronDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m19.5 8.25-7.5 7.5-7.5-7.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 15.75 7.5-7.5 7.5 7.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronUpIcon);\nexport default ForwardRef;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["quizAppSlice","createSlice","name","initialState","quizSlide","quizType","quizData","undefined","reducers","showQuizSlide","state","action","payload","typeQuiz","dataQuiz","actions","selectQuizSlide","quizApp","selectQuizType","storeQuiz","configureStore","reducer","globalApi","reducerPath","QuizAppSlice","middleware","getDefaultMiddleware","concat","useQuizSelector","useSelector","title","titleId","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","extendedApiSlice","injectEndpoints","endpoints","build","getGroups","query","chat","url","providesTags","getInfoGroups","getGroupDb","getMemberCountGroups","getFilePhoto","useGetFilePhotoQuery","useGetGroupsQuery","useGetInfoGroupsQuery","useGetMemberCountGroupsQuery","useGetGroupDbQuery","getType","getTypeById","type","updateTypeGroups","mutation","question_type","method","body","invalidatesTags","useGetTypeQuery","useGetTypeByIdQuery","useUpdateTypeGroupsMutation","getTime","getTimeById","time","updateTimeGroups","useGetTimeQuery","useGetTimeByIdQuery","useUpdateTimeGroupsMutation","nightTimeConst","night","NotactiveSittings","_jsx","_Fragment","children","Disclosure","as","className","_jsxs","Button","NoSymbolIcon","ChevronDownIcon","typeNewQuizConst","icon","PhotoIcon","component","TypeQuiz","data","allTypes","isLoading","loadingAllTypes","isSuccess","successAllTypes","GroupDb","GroupType","typeState","setType","useState","updateTypeGroup","typeChanged","SimpleRadioGroup","setState","Preloader","map","item","SimpleRadioGroupOption","description","active","Boolean","func","ListBulletIcon","CategoryQuiz","allCategory","useGetCategoryQuery","GroupCategory","useGetCategoryGroupsQuery","setCategory","useAddCategoryGroupsMutation","deleteCategory","useDeleteCategoryGroupsMutation","async","categoryChanged","check","category","SimpleCheckbox","disabled","checked","find","itm","inDevelopment","CloudArrowDownIcon","PeriodQuiz","allPeriod","loadingAllPeriod","successAllPeriod","GroupPeriod","timeState","setTime","updateTimeGroup","timeChanged","ClockIcon","TimeQuiz","GroupTime","times","setTimes","nightNode","setNightNode","period","hours","b","push","a","sortHours","sort","n1","n2","SimpleSwitchButton","label","enabled","setEnabled","value","onClick","includes","ScaleIcon","DifficultyQuiz","open","ChevronUpIcon","Panel","BotQuiz","role","SimpleAccordionMain","SimpleAccordionIcon","size","SimpleAccordionText","content","UserQuiz","NewQuiz","Page","MainBlock","SimpleTabs","tabs","QuizPage","tg","window","Telegram","WebApp","dispatch","useDispatch","slide","BackButton","show","onEvent","GlobalHeader","ButtonIcon","firstIcon","text","color","addQuiz","SlidePage","App","Provider","store","staggeredBaseQuery","retry","fetchBaseQuery","baseUrl","maxRetries","createApi","refetchOnFocus","baseQuery","tagTypes","classNames","classes","filter","join","showAlert","console","log","validationLengthForm","length","lengthMin","lengthMax","x","res","f","k","Symbol","for","l","m","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","__self","__source","q","c","g","e","h","call","defaultProps","$$typeof","_owner","current","exports","Fragment","jsx","jsxs","module"],"sourceRoot":""}